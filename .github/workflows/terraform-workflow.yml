name: 'EC2 Instance Creation'

on:
  push:
    branches: [ "main" ]
    paths:
    - terraform-github/**
    
  pull_request:
    branches: [ "main" ]
    paths:
    - terraform-github/**

#permissions:
  #contents: read

  workflow_dispatch:

jobs:
  terraform:
    name: 'EC2 creation'
    runs-on: amazon-linux
    env:  
       TF_VAR_access_key: ${{ secrets.ACCESS_KEY }}
       TF_VAR_secret_key: ${{ secrets.SECRET_KEY }}
    #environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
   
    - name: checkout to terraform code folder
      run: cd terraform-github

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      working-directory: ./terraform-github
      run: terraform init
      

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform plan
      working-directory: ./terraform-github
      run: terraform plan -var=TF_VAR_access_key=${{ secrets.ACCESS_KEY }} -var=TF_VAR_secret_key=${{ secrets.SECRET_KEY }}
